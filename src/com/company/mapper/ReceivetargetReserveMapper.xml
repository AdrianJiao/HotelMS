<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.company.mapper.ReceivetargetReserveMapper">
  <resultMap id="BaseResultMap" type="com.company.bean.ReceivetargetReserve">
    <id column="receivetargetReserveId" jdbcType="VARCHAR" property="receivetargetReserveId" />
    <result column="tid" jdbcType="INTEGER" property="tid" />
    <result column="roomNumber" jdbcType="VARCHAR" property="roomNumber" />
    <result column="predetermineDay" jdbcType="INTEGER" property="predetermineDay" />
    <result column="deposit" jdbcType="DOUBLE" property="deposit" />
    <result column="payWayID" jdbcType="VARCHAR" property="payWayID" />
    <result column="arriveTime" jdbcType="DATE" property="arriveTime" />
    <result column="reserveState" jdbcType="VARCHAR" property="reserveState" />
  </resultMap>
  <sql id="Base_Column_List">
    receivetargetReserveId, tid, roomNumber, predetermineDay, deposit, payWayID, arriveTime, 
    reserveState
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from receivetarget_reserve
    where receivetargetReserveId = #{receivetargetReserveId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from receivetarget_reserve
    where receivetargetReserveId = #{receivetargetReserveId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.company.bean.ReceivetargetReserve">
    insert into receivetarget_reserve (receivetargetReserveId, tid, roomNumber, 
      predetermineDay, deposit, payWayID, 
      arriveTime, reserveState)
    values (#{receivetargetReserveId,jdbcType=VARCHAR}, #{tid,jdbcType=INTEGER}, #{roomNumber,jdbcType=VARCHAR}, 
      #{predetermineDay,jdbcType=INTEGER}, #{deposit,jdbcType=DOUBLE}, #{payWayID,jdbcType=VARCHAR}, 
      #{arriveTime,jdbcType=DATE}, #{reserveState,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.company.bean.ReceivetargetReserve">
    insert into receivetarget_reserve
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="receivetargetReserveId != null">
        receivetargetReserveId,
      </if>
      <if test="tid != null">
        tid,
      </if>
      <if test="roomNumber != null">
        roomNumber,
      </if>
      <if test="predetermineDay != null">
        predetermineDay,
      </if>
      <if test="deposit != null">
        deposit,
      </if>
      <if test="payWayID != null">
        payWayID,
      </if>
      <if test="arriveTime != null">
        arriveTime,
      </if>
      <if test="reserveState != null">
        reserveState,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="receivetargetReserveId != null">
        #{receivetargetReserveId,jdbcType=VARCHAR},
      </if>
      <if test="tid != null">
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="roomNumber != null">
        #{roomNumber,jdbcType=VARCHAR},
      </if>
      <if test="predetermineDay != null">
        #{predetermineDay,jdbcType=INTEGER},
      </if>
      <if test="deposit != null">
        #{deposit,jdbcType=DOUBLE},
      </if>
      <if test="payWayID != null">
        #{payWayID,jdbcType=VARCHAR},
      </if>
      <if test="arriveTime != null">
        #{arriveTime,jdbcType=DATE},
      </if>
      <if test="reserveState != null">
        #{reserveState,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.company.bean.ReceivetargetReserve">
    update receivetarget_reserve
    <set>
      <if test="tid != null">
        tid = #{tid,jdbcType=INTEGER},
      </if>
      <if test="roomNumber != null">
        roomNumber = #{roomNumber,jdbcType=VARCHAR},
      </if>
      <if test="predetermineDay != null">
        predetermineDay = #{predetermineDay,jdbcType=INTEGER},
      </if>
      <if test="deposit != null">
        deposit = #{deposit,jdbcType=DOUBLE},
      </if>
      <if test="payWayID != null">
        payWayID = #{payWayID,jdbcType=VARCHAR},
      </if>
      <if test="arriveTime != null">
        arriveTime = #{arriveTime,jdbcType=DATE},
      </if>
      <if test="reserveState != null">
        reserveState = #{reserveState,jdbcType=VARCHAR},
      </if>
    </set>
    where receivetargetReserveId = #{receivetargetReserveId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.company.bean.ReceivetargetReserve">
    update receivetarget_reserve
    set tid = #{tid,jdbcType=INTEGER},
      roomNumber = #{roomNumber,jdbcType=VARCHAR},
      predetermineDay = #{predetermineDay,jdbcType=INTEGER},
      deposit = #{deposit,jdbcType=DOUBLE},
      payWayID = #{payWayID,jdbcType=VARCHAR},
      arriveTime = #{arriveTime,jdbcType=DATE},
      reserveState = #{reserveState,jdbcType=VARCHAR}
    where receivetargetReserveId = #{receivetargetReserveId,jdbcType=VARCHAR}
  </update>

  <!--统计模糊查询的总记录数-->
  <select id="countPartReceivetargetReserveByNameAndReserveState" parameterType="hashmap" resultType="int">
    select count(*) from
    (select * from
    (select * from
    (select * from receivetarget_reserve as temp
    inner join
    (select attributeDetailsName as payWayName,far_id from attributevalue) as tempa
    on temp.payWayID = tempa.far_id ) as tempb
    inner join
    (select attributeDetailsName as predetermineStateName,far_id as far_id1 from attributevalue)   as tempc
    on tempb.reserveState = tempc.far_id1)  as tempd
    inner join (select tid as tid1,teamName from receivetarget) as tempe
    on tempd.tid = tempe.tid1) as tempf
    <where>
      <if test="txtname != null and !txtname.isEmpty()">
        tempf.teamName like #{txtname}
      </if>
      and tempf.reserveState = #{reserveState}
    </where>
  </select>


  <!--分页和模糊查询的结果集填充旅客对象和房间对象-->
  <resultMap id="fillOutReceivetargetAndRoomMap" type="receivetargetReserve">
    <id column="receivetargetReserveId" property="receivetargetReserveId"></id>
    <!--这里查询的两个字段必须用result才会显示-->
    <result property="tid" column="tid"/>
    <result property="roomNumber" column="roomNumber"/>

    <!--填充旅客对象-->
    <association property="receivetarget"
                 javaType="receivetarget"
                 select="com.company.mapper.ReceivetargetMapper.queryReceivetargetByTid"
                 column="tid">
      <id column="tid" property="tid"></id>
    </association>
    <!--填充房间对象-->
    <association property="room"
                 javaType="room"
                 select="com.company.mapper.RoomMapper.queryRoomByRoomNumber"
                 column="roomNumber">
      <id column="roomNumber" property="roomNumber"></id>
    </association>
  </resultMap>

  <!--分页和模糊查询-->
  <select id="queryPartReceivetargetReserves" parameterType="map" resultMap="fillOutReceivetargetAndRoomMap">
    select * from
    (select * from
    (select * from
    (select * from receivetarget_reserve as temp
    inner join
    (select attributeDetailsName as payWayName,far_id from attributevalue) as tempa
    on temp.payWayID = tempa.far_id ) as tempb
    inner join
    (select attributeDetailsName as predetermineStateName,far_id as far_id1 from attributevalue)   as tempc
    on tempb.reserveState = tempc.far_id1)  as tempd
    inner join (select tid as tid1,teamName from receivetarget) as tempe
    on tempd.tid = tempe.tid1) as tempf
    <where>
      <if test="txtname != null and !txtname.isEmpty()">
        tempf.teamName like #{txtname}
      </if>
      and tempf.reserveState = #{reserveState}
    </where>
    limit #{limit} offset #{offset};
  </select>
</mapper>